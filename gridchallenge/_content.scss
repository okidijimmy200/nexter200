.container--1 {
    width: 90%;
    margin: 30px auto;
    background-color: #ddd;

    display: grid;

    // grid-template-rows: repeat(2, 150px);

    // --defining the implicit grids
    // --with max-content, the grid has jst enough space to fill the text area
    // grid-template-columns: max-content 1fr 1fr max-content;
    // --min-content takes the largest width it needs to take without overflowing
    // grid-template-columns: max-content 1fr 1fr min-content;

    // this is abit limiting and the text will not fit in the space
    // -so make it work, we need to specify min-content in the rows too
    // grid-template-rows: repeat(2, min-content);
    // --if we want the content to be 150px high
    // grid-template-rows: 150px min-content;
    // --when we use the above,the challenge is tht if text is alot, it will overflow

    // --so we need to use the minmax() function
    grid-template-rows: repeat(2, minmax(min-content));
    // grid-template-columns: minmax(200px, 300px) repeat(3, 1fr);
    // --to implement 50% width gap, the col will remain 50% almost through out until it reaches 200px
    grid-template-columns: minmax(200px, 50%) repeat(3, 1fr);


    .item {
        padding: 20px;
        color: white;
        font-family: sans-serif;
        font-size: 30px;
        background-color: orangered;

        &--1{background-color: orangered;}
        &--2{background-color: yellowgreen;}
        &--3{background-color: blueviolet;}
        &--4{background-color: palevioletred;}
        &--5{background-color: royalblue;}
        &--6{background-color: goldenrod;}
        &--7{background-color: crimson;}
        &--8{background-color: darkslategrey;}

    }
}