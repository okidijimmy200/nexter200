Lecture 1:
Naming Grid lines
-how to position grid items on the grid by using the automatically generated
grid line numbers
-we use square brackets and place the name of the line

-we use grid line names in professional layout

Lecture 2:
Naming Grid areas
-we can name the entire ares
-for grid area, we write a couple of strings and give each grid cell a name
-if we make an error in our representation, it will not work at all
-if we want to place an empty cell, we put a dot

-grid areas is good for small layouts

Lecture 3:
Implicit vs Explicit Grids
-we will do another small project to implement Implicit and Explicit concepts
-the four grids displayed in index are the explicit grids bse we explicitly defined how
the rows and cols shd be stated
-if we have more grid items and we have space,Css automatically adds more tracks to the grid
-we see tht we have and, grid, is, great section added to our grid yet we placed 2 rows
-so the rows we didnot define but we placed are caled implicit grids

-so how abt if we want to style the implicit grids?
-we can do tht using a property called grid-auto-rows
-the explict area is covered by solid lines while the implicit is not covered by solid lines

-why are implicit section added as rows and not as cols
-this is bse the grid-auto-flow is by default row

--this implict is important when we dont knw how many rows or cols we will have in our layout

Lecture 4:
Aligning GRID items
-we will learn different ways of aligning grid items to grid areas

Lecture 5:
Aligning tracks
-how do we align entire grid tracks to our grid area
-dense keyword is used to fillup the holes created
-this is good for situations like image gallery

Lecture 6:
Using min-content, max-content and the minimax()
-we use another demo project
max-content makes the grid have jst enough width to occupy the text
-this also makes the col as wide as possible without causing any linebreaks
-min-content takes the largest width it needs to take without overflowing
-this is abit limiting and the text will not fit in the space
-so make it work, we need to specify min-content in the rows too

--minmax() function is something we pass 2 values in and css will make sure we the track will stay within these 2 values
-so this gives us a define height of 150px bt incase the text is bigger, it automatically increases
-so as we decrease the width of the screen, the box remains 200px as the minimum width
-fractional unit fills up the remainin space bt its never smaller thn the min content set
